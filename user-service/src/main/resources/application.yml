eureka:
  client:
    serviceUrl:
      defaultZone:  http://localhost:8761/eureka/

feign:
  hystrix:
    enabled: false
  client:
    config:
      default:
        connectTimeout: 60000
        readTimeout: 60000
        loggerLevel: full

spring:
  cloud:
    alibaba:
      seata:
        tx-service-group: my_test_tx_group
  application:
    name: my-user-service
  datasource:
    #测试数据库
    name: my-user-service
    driver-class-name: com.mysql.jdbc.Driver
    ###################以下为druid增加的配置###########################
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 100
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,logback
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

    # druid recycle
    removeAbandoned:  true
    removeAbandonedTimeout: 300
    logAbandoned: true
    ###############以上为配置druid添加的配置########################################
    url: jdbc:mysql://localhost:3306/seata?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
    username: root
    password: 123456
  main:
    allow-bean-definition-overriding: true
server:
  port: 7001
mybatis:
  mapperLocations: classpath:mapper/*.xml
  typeAliasesPackage: com.example.userservice.entity

logging:
  path: ./logs
  file: Log
  config: classpath:logback-spring-test.xml


dubbo:
  application:
    id: my-user-service
    name: my-user-service
    qosEnable:  false
  protocol:
    id: dubbo
    name: dubbo
    port: 20881
  registry:
    id: my-user-service
    address:  zookeeper://127.0.0.1:2181
  scan:
    basePackages: com.example